from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import os

TOKEN = os.environ.get("BOT_TOKEN")

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton("–ú—ñ–π –∫–∞–±—ñ–Ω–µ—Ç üíª"), KeyboardButton("–ê–∫—Ü—ñ—ó üî•")],
        [KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç–∏ –≤ –ø—ñ–¥—Ç—Ä–∏–º–∫—É ‚úçÔ∏è"), KeyboardButton("–ü—Ä–æ –Ω–∞—Åüë•")],
        [KeyboardButton("–§—ñ–ª—ñ–∞–ª–∏ üçΩÔ∏è"), KeyboardButton("–ó–∞–º–æ–≤–∏—Ç–∏")],
        [KeyboardButton("–ö–∞–Ω–∞–ª")]
    ],
    resize_keyboard=True
)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–í—ñ—Ç–∞—î–º–æ! –û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ üëá",
        reply_markup=main_keyboard
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "–ú—ñ–π –∫–∞–±—ñ–Ω–µ—Ç üíª":
        await update.message.reply_text("–¶–µ –≤–∞—à –∫–∞–±—ñ–Ω–µ—Ç.")
    elif text == "–ê–∫—Ü—ñ—ó üî•":
        await update.message.reply_text("–û—Å—å –≥–∞—Ä—è—á—ñ –∞–∫—Ü—ñ—ó!")
    elif text == "–ù–∞–ø–∏—Å–∞—Ç–∏ –≤ –ø—ñ–¥—Ç—Ä–∏–º–∫—É ‚úçÔ∏è":
        await update.message.reply_text("–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à –∑–∞–ø–∏—Ç, –º–∏ –≤—ñ–¥–ø–æ–≤—ñ–º–æ.")
    elif text == "–ü—Ä–æ –Ω–∞—Åüë•":
        await update.message.reply_text("–ú–∏ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–æ–Ω–∞–ª—ñ–≤!")
    elif text == "–§—ñ–ª—ñ–∞–ª–∏ üçΩÔ∏è":
        await update.message.reply_text("–ù–∞—à—ñ —Ñ—ñ–ª—ñ—ó: –ö–∏—ó–≤, –õ—å–≤—ñ–≤, –û–¥–µ—Å–∞.")
    elif text == "–ó–∞–º–æ–≤–∏—Ç–∏":
        await update.message.reply_text("–©–æ —Ö–æ—á–µ—Ç–µ –∑–∞–º–æ–≤–∏—Ç–∏?")
    elif text == "–ö–∞–Ω–∞–ª":
        await update.message.reply_text("–ù–∞—à –∫–∞–Ω–∞–ª: https://t.me/your_channel")
    else:
        await update.message.reply_text("–ù–µ –∑—Ä–æ–∑—É–º—ñ–≤. –û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é.")

# –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()